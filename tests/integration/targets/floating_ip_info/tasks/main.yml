---
- name: Run tests
  block:
    - name: create project
      cherryservers.cloud.project:
        auth_token: "{{ cherryservers_api_key }}"
        name: "ansible-test-fip-info"
        team_id: "{{ cherryservers_team_id }}"
      register: project

    - name: create server
      cherryservers.cloud.server:
        auth_token: "{{ cherryservers_api_key }}"
        region: "{{ fip_region }}"
        project_id: "{{ project.cherryservers_project.id }}"
        plan: "{{ server_plan }}"
      register: server
    - name: verify create server
      ansible.builtin.assert:
        that:
          - server is changed

    - name: create fip
      cherryservers.cloud.floating_ip:
        auth_token: "{{ cherryservers_api_key }}"
        region: "{{ fip_region }}"
        project_id: "{{ project.cherryservers_project.id }}"
        target_server_id: "{{ server.cherryservers_server.id }}"
        tags: "{{ fip_tags }}"
      register: fip
    - name: verify create fip
      ansible.builtin.assert:
        that:
          - fip is changed

    - name: test gather by project_id
      cherryservers.cloud.floating_ip_info:
        auth_token: "{{ cherryservers_api_key }}"
        project_id: "{{ project.cherryservers_project.id }}"
      register: result
    - name: verify gather by project_id
      ansible.builtin.assert:
        that:
          - result.cherryservers_floating_ips | list | count >= 1
          - result is not changed

    - name: test gather by project_id with check mode
      cherryservers.cloud.floating_ip_info:
        auth_token: "{{ cherryservers_api_key }}"
        project_id: "{{ project.cherryservers_project.id }}"
      check_mode: true
      register: result
    - name: verify gather by project_id with check mode
      ansible.builtin.assert:
        that:
          - result.cherryservers_floating_ips | list | count >= 1
          - result is not changed

    - name: test gather floating ip by id
      cherryservers.cloud.floating_ip_info:
        auth_token: "{{ cherryservers_api_key }}"
        id: "{{ fip.cherryservers_floating_ip.id }}"
      register: result
    - name: verify gather floating ip by id
      ansible.builtin.assert:
        that:
          - result.cherryservers_floating_ips | list | count == 1
          - result is not changed

    - name: test gather floating ip by id with check mode
      cherryservers.cloud.floating_ip_info:
        auth_token: "{{ cherryservers_api_key }}"
        id: "{{ fip.cherryservers_floating_ip.id }}"
      check_mode: true
      register: result
    - name: verify gather floating ip by id with check mode
      ansible.builtin.assert:
        that:
          - result.cherryservers_floating_ips | list | count == 1
          - result is not changed

    - name: test gather floating ip by id wrong
      cherryservers.cloud.floating_ip_info:
        auth_token: "{{ cherryservers_api_key }}"
        id: "ef607e8a-d9d4-d4ba-7379-55dbd841e06c"
      register: result
      ignore_errors: true
    - name: verify gather floating ip by id wrong
      ansible.builtin.assert:
        that:
          - result is failed

    - name: test gather floating ip by address
      cherryservers.cloud.floating_ip_info:
        auth_token: "{{ cherryservers_api_key }}"
        project_id: "{{ project.cherryservers_project.id }}"
        address: "{{ fip.cherryservers_floating_ip.address }}"
      register: result
    - name: verify gather floating ip by address
      ansible.builtin.assert:
        that:
          - result.cherryservers_floating_ips | list | count == 1
          - result is not changed

    - name: test gather floating ip by address with check mode
      cherryservers.cloud.floating_ip_info:
        auth_token: "{{ cherryservers_api_key }}"
        project_id: "{{ project.cherryservers_project.id }}"
        address: "{{ fip.cherryservers_floating_ip.address }}"
      register: result
      check_mode: true
    - name: verify gather floating ip by address with check mode
      ansible.builtin.assert:
        that:
          - result.cherryservers_floating_ips | list | count == 1
          - result is not changed

    - name: test gather floating ip by server id
      cherryservers.cloud.floating_ip_info:
        auth_token: "{{ cherryservers_api_key }}"
        project_id: "{{ project.cherryservers_project.id }}"
        target_server_id: "{{ fip.cherryservers_floating_ip.target_server_id }}"
      register: result
    - name: verify gather floating ip by server id
      ansible.builtin.assert:
        that:
          - result.cherryservers_floating_ips | list | count == 1
          - result is not changed

    - name: test gather floating ip by tags
      cherryservers.cloud.floating_ip_info:
        auth_token: "{{ cherryservers_api_key }}"
        project_id: "{{ project.cherryservers_project.id }}"
        tags: "{{ fip_tags }}"
      register: result
    - name: verify gather floating ip by tags
      ansible.builtin.assert:
        that:
          - result.cherryservers_floating_ips | list | count == 1
          - result is not changed

    - name: test gather floating ip by tags with check mode
      cherryservers.cloud.floating_ip_info:
        auth_token: "{{ cherryservers_api_key }}"
        project_id: "{{ project.cherryservers_project.id }}"
        tags: "{{ fip_tags }}"
      check_mode: true
      register: result
    - name: gather floating ip by tags with check mode
      ansible.builtin.assert:
        that:
          - result.cherryservers_floating_ips | list | count == 1
          - result is not changed

    - name: test gather floating ip by tags wrong
      cherryservers.cloud.floating_ip_info:
        auth_token: "{{ cherryservers_api_key }}"
        project_id: "{{ project.cherryservers_project.id }}"
        tags:
          env: "none"
      register: result
    - name: verify gather floating ip by tags wrong
      ansible.builtin.assert:
        that:
          - result.cherryservers_floating_ips | list | count == 0
          - result is not changed

    - name: test gather with all options
      cherryservers.cloud.floating_ip_info:
        auth_token: "{{ cherryservers_api_key }}"
        project_id: "{{ project.cherryservers_project.id }}"
        address: "{{ fip.cherryservers_floating_ip.address }}"
        tags: "{{ fip.cherryservers_floating_ip.tags }}"
        region: "{{ fip.cherryservers_floating_ip.region }}"
        target_server_id: "{{ fip.cherryservers_floating_ip.target_server_id }}"
      register: result
    - name: verify gather with all options
      ansible.builtin.assert:
        that:
          - result.cherryservers_floating_ips | list | count == 1
          - result is not changed
  always:
    - name: delete project
      cherryservers.cloud.project:
        id: "{{ project.cherryservers_project.id }}"
        auth_token: "{{ cherryservers_api_key }}"
        state: absent
