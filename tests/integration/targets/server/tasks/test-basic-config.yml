---
- name: Run tests
  block:
    - name: create project
      cherryservers.cloud.project:
        auth_token: "{{ cherryservers_api_key }}"
        name: "ansible-test-server-basic"
        team_id: "{{ cherryservers_team_id }}"
      register: project

    - name: test create server missing parameter
      cherryservers.cloud.server:
        auth_token: "{{ cherryservers_api_key }}"
        project_id: "{{ project.cherryservers_project.id }}"
      register: server
      ignore_errors: true
    - name: verify create server missing parameter
      ansible.builtin.assert:
        that:
          - server is failed

    - name: test create server with check mode
      cherryservers.cloud.server:
        auth_token: "{{ cherryservers_api_key }}"
        project_id: "{{ project.cherryservers_project.id }}"
        region: "{{ server_region }}"
        plan: "{{ server_plan }}"
        hostname: "test-server-none"
      register: server
      check_mode: true
    - name: verify create server with check mode
      ansible.builtin.assert:
        that:
          - server is changed

    - name: test no server actually created
      cherryservers.cloud.server_info:
        auth_token: "{{ cherryservers_api_key }}"
        project_id: "{{ project.cherryservers_project.id }}"
        hostname: "test-server-none"
      register: result
    - name: verify no server actually created
      ansible.builtin.assert:
        that:
          - result.cherryservers_servers | list | count == 0
          - result is not changed

    - name: test create server
      cherryservers.cloud.server:
        auth_token: "{{ cherryservers_api_key }}"
        project_id: "{{ project.cherryservers_project.id }}"
        region: "{{ server_region }}"
        plan: "{{ server_plan }}"
      register: server
    - name: verify create server
      ansible.builtin.assert:
        that:
          - server is changed

    - name: test server actually created
      cherryservers.cloud.server_info:
        auth_token: "{{ cherryservers_api_key }}"
        id: "{{ server.cherryservers_server.id }}"
      register: result
    - name: verify server actually created
      ansible.builtin.assert:
        that:
          - result.cherryservers_servers | list | count == 1
          - result.cherryservers_servers[0].project_id == cherryservers_project_id
          - result.cherryservers_servers[0].region == server_region
          - result.cherryservers_servers[0].plan == server_plan

    - name: test server creation idempotency with check mode
      cherryservers.cloud.server:
        auth_token: "{{ cherryservers_api_key }}"
        id: "{{ server.cherryservers_server.id }}"
      register: result
      check_mode: true
    - name: verify server creation idempotency with check mode
      ansible.builtin.assert:
        that:
          - result is not changed

    - name: test server creation idempotency
      cherryservers.cloud.server:
        auth_token: "{{ cherryservers_api_key }}"
        id: "{{ server.cherryservers_server.id }}"
      register: result
    - name: verify server creation idempotency
      ansible.builtin.assert:
        that:
          - result is not changed

    - name: test update server with check mode
      cherryservers.cloud.server:
        id: "{{ server.cherryservers_server.id }}"
        auth_token: "{{ cherryservers_api_key }}"
        hostname: "{{ server_update_hostname }}"
        tags: "{{ server_update_tags }}"
      check_mode: true
      register: result
    - name: verify update server with check mode
      ansible.builtin.assert:
        that:
          - result is changed

    - name: test no server update actually happened
      cherryservers.cloud.server_info:
        id: "{{ server.cherryservers_server.id }}"
        auth_token: "{{ cherryservers_api_key }}"
        hostname: "{{ server_update_hostname }}"
        tags: "{{ server_update_tags }}"
      register: result
    - name: verify no update actually happened
      ansible.builtin.assert:
        that:
          - result.cherryservers_servers | list | count == 0
          - result is not changed

    - name: test update server
      cherryservers.cloud.server:
        id: "{{ server.cherryservers_server.id }}"
        auth_token: "{{ cherryservers_api_key }}"
        hostname: "{{ server_update_hostname }}"
        tags: "{{ server_update_tags }}"
      register: result
    - name: verify update server
      ansible.builtin.assert:
        that:
          - result is changed

    - name: test update server actually happened
      cherryservers.cloud.server_info:
        id: "{{ server.cherryservers_server.id }}"
        auth_token: "{{ cherryservers_api_key }}"
        hostname: "{{ server_update_hostname }}"
        tags: "{{ server_update_tags }}"
      register: result
    - name: verify update server actually happened
      ansible.builtin.assert:
        that:
          - result.cherryservers_servers | list | count == 1
          - result.cherryservers_servers[0].hostname == server_update_hostname
          - result.cherryservers_servers[0].tags == server_update_tags

    - name: test server update idempotency with check mode
      cherryservers.cloud.server:
        id: "{{ server.cherryservers_server.id }}"
        auth_token: "{{ cherryservers_api_key }}"
        hostname: "{{ server_update_hostname }}"
        tags: "{{ server_update_tags }}"
      register: result
      check_mode: true
    - name: verify server update idempotency with check mode
      ansible.builtin.assert:
        that:
          - result is not changed

    - name: test server update idempotency
      cherryservers.cloud.server:
        id: "{{ server.cherryservers_server.id }}"
        auth_token: "{{ cherryservers_api_key }}"
        hostname: "{{ server_update_hostname }}"
        tags: "{{ server_update_tags }}"
      register: result
    - name: verify server update idempotency
      ansible.builtin.assert:
        that:
          - result is not changed

    - name: test delete server no id
      cherryservers.cloud.server:
        auth_token: "{{ cherryservers_api_key }}"
        state: "absent"
      register: result
      ignore_errors: true
    - name: verify server absent state no id
      ansible.builtin.assert:
        that:
          - result is failed

    - name: test delete server with check mode
      cherryservers.cloud.server:
        id: "{{ server.cherryservers_server.id }}"
        auth_token: "{{ cherryservers_api_key }}"
        state: "absent"
      register: result
      check_mode: true
    - name: verify delete server with check mode
      ansible.builtin.assert:
        that:
          - result is changed

    - name: test no server actually deleted
      cherryservers.cloud.server_info:
        auth_token: "{{ cherryservers_api_key }}"
        id: "{{ server.cherryservers_server.id }}"
      register: result
    - name: verify no server actually deleted
      ansible.builtin.assert:
        that:
          - result.cherryservers_servers | list | count == 1

    - name: test delete server
      cherryservers.cloud.server:
        auth_token: "{{ cherryservers_api_key }}"
        id: "{{ server.cherryservers_server.id }}"
        state: "absent"
      register: result
    - name: verify delete server
      ansible.builtin.assert:
        that:
          - result is changed

    - name: test server actually deleted
      cherryservers.cloud.server_info:
        auth_token: "{{ cherryservers_api_key }}"
        id: "{{ server.cherryservers_server.id }}"
      register: result
      ignore_errors: true
    - name: verify server actually deleted
      ansible.builtin.assert:
        that:
          - result is failed

    - name: test server delete idempotency with check mode
      cherryservers.cloud.server:
        auth_token: "{{ cherryservers_api_key }}"
        id: "{{ server.cherryservers_server.id }}"
        state: "absent"
      register: result
      check_mode: true
    - name: verify server delete idempotency with check mode
      ansible.builtin.assert:
        that:
          - result is not changed

    - name: test server delete idempotency
      cherryservers.cloud.server:
        auth_token: "{{ cherryservers_api_key }}"
        id: "{{ server.cherryservers_server.id }}"
        state: "absent"
      register: result
    - name: verify server delete idempotency with check mode
      ansible.builtin.assert:
        that:
          - result is not changed

  always:
    - name: delete project
      cherryservers.cloud.project:
        id: "{{ project.cherryservers_project.id }}"
        auth_token: "{{ cherryservers_api_key }}"
        state: absent
